import{uid}from"./uid.js";const DataBaseObject={};function renderTodo(e){const t=document.getElementById("todoItems"),n=document.createElement("li");n.classList="item";const o=document.createElement("span");o.classList="item-vel",o.setAttribute("data-key",e.id);const d=document.createElement("div");d.classList="safe",d.innerHTML="<span></span>Safe";const a=document.createElement("button");a.classList="btn-del";const s=document.createTextNode(e.text);a.addEventListener("click",(function(){DataBaseObject.indexedDB.deleteTodo(e.id),handleClick(a,o)}),!1),a.innerHTML='<span> <span class="del"></span> </span>Delete',n.appendChild(o),o.appendChild(s),n.appendChild(d),n.appendChild(a),t.appendChild(n),o.addEventListener("click",(function(t){submitbtn.style.display="none",editBtn.style.display="block",d.style.background="#00C45A";t.target.closest("[data-key]").getAttribute("data-key");document.getElementById("todo").value=e.text,document.Form.setAttribute("data-key",e.id),todo.value=e.text}))}function editToDo(){let e=makeTrans(["todolist"],"readwrite").objectStore("todolist"),t={id:document.Form.getAttribute("data-key"),text:todo.value},n=e.put(t);if(n.onsuccess=function(e){DataBaseObject.indexedDB.getAllTodoItems()},n.onerror=function(e){console.log("Error Editing: ",e)},""==todo.value)return alert("Pleas enter your edited task! Field cannot be blank!"),!1}function clearData(){const e=makeTrans(["todolist"],"readwrite").objectStore("todolist").clear();e.onerror=function(){console.log("error")},e.onsuccess=function(){console.log("success")}}function handleClick(e,t){console.log("removed"),e.removeEventListener("click",handleClick),t.removeEventListener("click",handleClick)}function changeBtn(){submitbtn.style.display="inline-block",editBtn.style.display="none",todo.value=""}function makeTrans(e,t){let n=DataBaseObject.indexedDB.db.transaction(e,t);return n.onerror=e=>{console.warn(e)},n}DataBaseObject.indexedDB={},DataBaseObject.indexedDB.db=null,DataBaseObject.indexedDB.onerror=function(e){console.log(e)},DataBaseObject.indexedDB.open=function(){let e=indexedDB.open("todos",1);e.onupgradeneeded=function(e){let t=e.target.result;e.target.transaction.onerror=DataBaseObject.indexedDB.onerror,t.objectStoreNames.contains("todolist")&&t.deleteObjectStore("todolist");t.createObjectStore("todolist",{keyPath:"id"})},e.onsuccess=function(e){DataBaseObject.indexedDB.db=e.target.result,DataBaseObject.indexedDB.getAllTodoItems()},e.onerror=DataBaseObject.indexedDB.onerror},DataBaseObject.indexedDB.addTodo=function(e){let t=makeTrans(["todolist"],"readwrite").objectStore("todolist"),n={text:e,id:uid()},o=t.put(n);o.onsuccess=function(e){DataBaseObject.indexedDB.getAllTodoItems()},o.onerror=function(e){console.log("Error Adding: ",e)}},DataBaseObject.indexedDB.deleteTodo=function(e){let t=makeTrans(["todolist"],"readwrite").objectStore("todolist").delete(e);t.onsuccess=function(e){DataBaseObject.indexedDB.getAllTodoItems()},t.onerror=function(e){console.log("Error Remove: ",e)}},DataBaseObject.indexedDB.getAllTodoItems=function(){document.getElementById("todoItems").innerHTML="";let e=makeTrans(["todolist"],"readwrite").objectStore("todolist"),t=IDBKeyRange.lowerBound(0),n=e.openCursor(t);n.onsuccess=function(e){let t=e.target.result;0!=!!t&&(renderTodo(t.value),t.continue())},n.onerror=DataBaseObject.indexedDB.onerror};const todo=document.getElementById("todo");function addTodo(){DataBaseObject.indexedDB.addTodo(todo.value),todo.value=""}function init(){DataBaseObject.indexedDB.open()}const editBtn=document.getElementById("btn-edit");editBtn.addEventListener("click",(function(e){e.preventDefault(),editToDo(),changeBtn()}));const isCleaner=document.getElementById("iscleaner");isCleaner.addEventListener("click",(()=>{clearData(),document.getElementById("todoItems").remove()}));const submitbtn=document.getElementById("btn-save");submitbtn.addEventListener("click",(e=>(e.preventDefault(),""==todo.value?(alert("Pleas enter your task! Field cannot be blank!"),!1):(addTodo(),!1)))),window.addEventListener("DOMContentLoaded",init,!1);